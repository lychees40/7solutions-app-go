name: Build, Push Docker Image

on:
  push:
    branches:
      - develop
    # tags:
    #   - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    env:
      APP_NAME: ${{ vars.APP_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      ## Can run in docker build as well we split better organization of steps ##
      ## For support more features like report, hook, conditional in CI/CD ##
      - name: Dependency check (Result will false cause there are no dependencies right now)
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: 1.22
          go-package: ./...
          output-format: json
          output-file: govulncheck-output.json
        id: govulncheck

      - name: Save Govulncheck Output
        run: |
          govuln_output=$(cat govulncheck-output.json)
          echo "GOVULNCHECK_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$govuln_output" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Static code analysis
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt json -out gosec-report.json ./...'
        id: gosec

      - name: Save Gosec Output
        run: |
          gosec_output=$(cat gosec-report.json)
          echo "GOSEC_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$gosec_output" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Set COMMIT_ID_SHORT
        id: vars
        run: echo "COMMIT_ID_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ github.ref_name }}-${{ env.COMMIT_ID_SHORT }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ github.ref_name }}-${{ env.COMMIT_ID_SHORT }}
          format: 'json'
          output: trivy-report.json
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        id: trivy

      - name: Save Trivy Output
        run: |
          trivy_output=$(cat trivy-report.json)
          echo "TRIVY_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$trivy_output" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Extract summaries from the reports
      - name: Extract Trivy Summary
        id: trivy_summary
        run: |
          echo "Extracting Trivy summary..."
          CRITICAL=$(jq '[.Results[].Vulnerabilities[] | select(.Severity=="CRITICAL")] | length' trivy-report.json)
          HIGH=$(jq '[.Results[].Vulnerabilities[] | select(.Severity=="HIGH")] | length' trivy-report.json)
          echo "TRIVY_CRITICAL=${CRITICAL}" >> $GITHUB_ENV
          echo "TRIVY_HIGH=${HIGH}" >> $GITHUB_ENV

      - name: Extract Gosec Summary
        id: gosec_summary
        run: |
          echo "Extracting Gosec summary..."
          GOSEC_ISSUES=$(jq 'length' gosec-report.json)
          echo "GOSEC_ISSUES=${GOSEC_ISSUES}" >> $GITHUB_ENV

      - name: Extract Govulncheck Summary
        id: govulncheck_summary
        run: |
          echo "Extracting Govulncheck summary..."
          GOVULNCHECK_VULNS=$(jq 'length' govulncheck-output.json)
          echo "GOVULNCHECK_VULNS=${GOVULNCHECK_VULNS}" >> $GITHUB_ENV

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ github.ref_name }}-${{ env.COMMIT_ID_SHORT }}

      - name: Create Commit Message
        id: commit_message
        run: |
          COMMIT_MSG="Update deployment.yaml with image tag ${{ github.ref_name }}-${{ env.COMMIT_ID_SHORT }}
          
          **Security Scan Summary:**

          - **Trivy:**
            - Critical Vulnerabilities: $TRIVY_CRITICAL
            - High Vulnerabilities: $TRIVY_HIGH

          - **Gosec:**
            - Total Issues: $GOSEC_ISSUES

          - **Govulncheck:**
            - Total Vulnerabilities: $GOVULNCHECK_VULNS
          "
          # Use GITHUB_OUTPUT for setting outputs
          echo "msg<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update Nonprod deployment.yaml with new image tag
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          COMMIT_MESSAGE: ${{ steps.commit_message.outputs.msg }}
        run: |
          sed -i "s|image: .*$|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ github.ref_name }}-${{ env.COMMIT_ID_SHORT }}|" ./overlays/nonprod/deployment.yaml
          git config --global user.name "lychees40"
          git config --global user.email "lychees40@users.noreply.github.com"
          git add ./overlays/nonprod/deployment.yaml
          git commit -m "${COMMIT_MESSAGE}"
          git push